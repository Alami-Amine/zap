# Adapter pack file for Studio.
#
label=Zigbee Advanced platform
path=.
requiredFeatureLevel=apack.core:7

id=zclConfigurator

# Trigger file extension. No period.
uc.triggerExtension=zap

executable(zap) {
  engine=node
  exe=src-script/zap-start.js
}

executable(zap_regen) {
  engine=node
  exe=src-script/zap-generate.js
}

function(uc_generate) {
  cmd=$(zap_regen) --out ${generationOutput} --zclProperties ${sdkRoot}/app/zcl/zcl-studio.properties --generationTemplate ${sdkRoot}/protocol/zigbee/app/framework/gen-template/gen-templates.json
}

function(run) {
  zclProperties.description=Location for ZCL XML file
  cmd=$(zap) --zclProperties ${zclProperties}
}

function(zapHelp) {
  cmd=$(zap) --help
}

function(zapSelfcheck) {
  cmd=$(zap) selfCheck
}

function(zapServer) {
  zclProperties.description=Location for ZCL XML file
  output.description=Output directory for project generation
  cmd=$(zap) --noUi --showUrl --zclProperties ${zclProperties} --output ${output}
}

function(zapFull) {
  zclProperties.description=Location for ZCL XML file
  cmd=$(zap) --showUrl --zclProperties ${zclProperties}
}

option(auto-regen) {
  name=Automatic regeneration
  description=Automatically regenerate when configuration file is saved.
  type=boolean
  default=false
}

option(zclProperties) {
  name=Path to ZCL xml properties file
  description=Path to ZCL xml properties file (relative to the stack)
  type=string
  default=./app/zcl/zcl-studio.properties
}

option(output) {
  name=Output directory for project generation
  description=Directory where the generated files will be written to.
  type=string
  default=./
}
