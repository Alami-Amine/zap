// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_CLUSTER_CLIENT_API
#define SILABS_CLUSTER_CLIENT_API


// This is generated client API



/**
 * @addtogroup command Application Framework command interface Reference
 * This document describes the ZCL command interface used by the Ember
 * Application Framework for filling ZCL command buffers.
 * @{
 */
/** @name Global Commands */
// @{
 {{#each type}}
/** @brief {{trimNewLinesTabs this.description}}
 *
 * Command: {{this.label}}
 * @param clusterId EmberAfClusterId
 {{#each this.CommandArguments}}
 * @param {{this.label}} {{#if this.isArray~}}uint8_t*
                        {{else~}}
                            {{#switch this.type~}}
                                {{#case 'data8'~}}uint8_t{{/case~}}
                                {{#case 'boolean'~}}uint8_t{{/case~}}
                                {{#case 'bitmap8'~}}uint8_t{{/case~}}
                                {{#case 'int8u'~}}uint8_t{{/case~}}
                                {{#case 'int8s'~}}int8_t{{/case~}}
                                {{#case 'enum8'~}}uint8_t{{/case~}}
                                {{#case 'data16'~}}uint16_t{{/case~}}
                                {{#case 'bitmap16'~}}uint16_t{{/case~}}
                                {{#case 'int16u'~}}uint16_t{{/case~}}
                                {{#case 'int16s'~}}int16_t{{/case~}}
                                {{#case 'enum16'~}}uint16_t{{/case~}}
                                {{#case 'float_semi'~}}uint16_t{{/case~}}
                                {{#case 'cluster_id'~}}uint16_t{{/case~}}
                                {{#case 'attribute_id'~}}uint16_t{{/case~}}
                                {{#case 'data24'~}}uint32_t{{/case~}}
                                {{#case 'bitmap24'~}}uint32_t{{/case~}}
                                {{#case 'int24u'~}}uint32_t{{/case~}}
                                {{#case 'int24s'~}}int32_t{{/case~}}
                                {{#case 'data32'~}}uint32_t{{/case~}}
                                {{#case 'bitmap32'~}}uint32_t{{/case~}}
                                {{#case 'int32u'~}}uint32_t{{/case~}}
                                {{#case 'int32s'~}}int32_t{{/case~}}
                                {{#case 'float_single'~}}uint32_t{{/case~}}
                                {{#case 'time_of_day'~}}uint32_t{{/case~}}
                                {{#case 'date'~}}uint32_t{{/case~}}
                                {{#case 'utc_time'~}}uint32_t{{/case~}}
                                {{#case 'bacnet_oid'~}}uint32_t{{/case~}}
                                {{#default 'uint8_t'~}}uint8_t*{{/default~}}
                            {{/switch}}
                        {{/if}}
 {{#if this.isArray~}}* @param {{this.label}}Len uint16_t{{/if}}
 {{/each}}
 */
{{#if (eitherCommandSource this.source)}}
#define emberAfFillCommandGlobalServerToClient{{this.label}}(clusterId, \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
            {{this.label}}, \
            {{this.label}}Len) \
            {{else}}
            {{this.label}}, \
            {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
            {{this.label}}) \
            {{else}}
            {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}
 emberAfFillExternal{{#if (commandManufactureSpecific this.manufacturerCode)}}ManufacturerSpecific{{/if}}Buffer((ZCL_GLOBAL_COMMAND \
    {{#if (commandManufactureSpecific this.manufacturerCode)}}| ZCL_MANUFACTURER_SPECIFIC_MASK{{/if}} | ZCL_FRAME_CONTROL_SERVER_TO_CLIENT), \
    clusterId, \
    {{~#if (commandManufactureSpecific this.manufacturerCode)}}0x{{this.manufacturerCode}},{{/if}}
    ZCL_{{strong this.label}}_COMMAND_ID, \
    "{{formatCharactersForCommandArguments this.CommandArguments}}", \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
                {{this.label}}, \
                {{this.label}}Len);
            {{else}}
                {{this.label}}, \
                {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
                {{this.label}});
            {{else}}
                {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}

/** @brief {{trimNewLinesTabs this.description}}
 *
 * Command: {{this.label}}
 * @param clusterId EmberAfClusterId
 {{#each this.CommandArguments}}
 * @param {{this.label}} {{#if this.isArray~}}uint8_t*
                        {{else~}}
                            {{#switch this.type~}}
                                {{#case 'data8'~}}uint8_t{{/case~}}
                                {{#case 'boolean'~}}uint8_t{{/case~}}
                                {{#case 'bitmap8'~}}uint8_t{{/case~}}
                                {{#case 'int8u'~}}uint8_t{{/case~}}
                                {{#case 'int8s'~}}int8_t{{/case~}}
                                {{#case 'enum8'~}}uint8_t{{/case~}}
                                {{#case 'data16'~}}uint16_t{{/case~}}
                                {{#case 'bitmap16'~}}uint16_t{{/case~}}
                                {{#case 'int16u'~}}uint16_t{{/case~}}
                                {{#case 'int16s'~}}int16_t{{/case~}}
                                {{#case 'enum16'~}}uint16_t{{/case~}}
                                {{#case 'float_semi'~}}uint16_t{{/case~}}
                                {{#case 'cluster_id'~}}uint16_t{{/case~}}
                                {{#case 'attribute_id'~}}uint16_t{{/case~}}
                                {{#case 'data24'~}}uint32_t{{/case~}}
                                {{#case 'bitmap24'~}}uint32_t{{/case~}}
                                {{#case 'int24u'~}}uint32_t{{/case~}}
                                {{#case 'int24s'~}}int32_t{{/case~}}
                                {{#case 'data32'~}}uint32_t{{/case~}}
                                {{#case 'bitmap32'~}}uint32_t{{/case~}}
                                {{#case 'int32u'~}}uint32_t{{/case~}}
                                {{#case 'int32s'~}}int32_t{{/case~}}
                                {{#case 'float_single'~}}uint32_t{{/case~}}
                                {{#case 'time_of_day'~}}uint32_t{{/case~}}
                                {{#case 'date'~}}uint32_t{{/case~}}
                                {{#case 'utc_time'~}}uint32_t{{/case~}}
                                {{#case 'bacnet_oid'~}}uint32_t{{/case~}}
                                {{#default 'uint8_t'~}}uint8_t*{{/default~}}
                            {{/switch}}
                        {{/if}}
 {{#if this.isArray~}}* @param {{this.label}}Len uint16_t{{/if}}
 {{/each}}
 */
#define emberAfFillCommandGlobalClientToServer{{this.label}}(clusterId, \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
            {{this.label}}, \
            {{this.label}}Len) \
            {{else}}
            {{this.label}}, \
            {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
            {{this.label}}) \
            {{else}}
            {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}
  emberAfFillExternal{{#if (commandManufactureSpecific this.manufacturerCode)}}ManufacturerSpecific{{/if}}Buffer((ZCL_GLOBAL_COMMAND \
    {{#if (commandManufactureSpecific this.manufacturerCode)}}| ZCL_MANUFACTURER_SPECIFIC_MASK{{/if}} | ZCL_FRAME_CONTROL_CLIENT_TO_SERVER), \
    clusterId, \
    {{~#if (commandManufactureSpecific this.manufacturerCode)}}0x{{this.manufacturerCode}},{{/if}}
    ZCL_{{strong this.label}}_COMMAND_ID, \
    "{{formatCharactersForCommandArguments this.CommandArguments}}", \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
                {{this.label}}, \
                {{this.label}}Len);
            {{else}}
                {{this.label}}, \
                {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
                {{this.label}});
            {{else}}
                {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}

{{else}}
/** @brief {{trimNewLinesTabs this.description}}
 *
 * Command: {{this.label}}
 * @param clusterId EmberAfClusterId
 {{#each this.CommandArguments}}
 * @param {{this.label}} {{#if this.isArray~}}uint8_t*
                        {{else~}}
                            {{#switch this.type~}}
                                {{#case 'data8'~}}uint8_t{{/case~}}
                                {{#case 'boolean'~}}uint8_t{{/case~}}
                                {{#case 'bitmap8'~}}uint8_t{{/case~}}
                                {{#case 'int8u'~}}uint8_t{{/case~}}
                                {{#case 'int8s'~}}int8_t{{/case~}}
                                {{#case 'enum8'~}}uint8_t{{/case~}}
                                {{#case 'data16'~}}uint16_t{{/case~}}
                                {{#case 'bitmap16'~}}uint16_t{{/case~}}
                                {{#case 'int16u'~}}uint16_t{{/case~}}
                                {{#case 'int16s'~}}int16_t{{/case~}}
                                {{#case 'enum16'~}}uint16_t{{/case~}}
                                {{#case 'float_semi'~}}uint16_t{{/case~}}
                                {{#case 'cluster_id'~}}uint16_t{{/case~}}
                                {{#case 'attribute_id'~}}uint16_t{{/case~}}
                                {{#case 'data24'~}}uint32_t{{/case~}}
                                {{#case 'bitmap24'~}}uint32_t{{/case~}}
                                {{#case 'int24u'~}}uint32_t{{/case~}}
                                {{#case 'int24s'~}}int32_t{{/case~}}
                                {{#case 'data32'~}}uint32_t{{/case~}}
                                {{#case 'bitmap32'~}}uint32_t{{/case~}}
                                {{#case 'int32u'~}}uint32_t{{/case~}}
                                {{#case 'int32s'~}}int32_t{{/case~}}
                                {{#case 'float_single'~}}uint32_t{{/case~}}
                                {{#case 'time_of_day'~}}uint32_t{{/case~}}
                                {{#case 'date'~}}uint32_t{{/case~}}
                                {{#case 'utc_time'~}}uint32_t{{/case~}}
                                {{#case 'bacnet_oid'~}}uint32_t{{/case~}}
                                {{#default 'uint8_t'~}}uint8_t*{{/default~}}
                            {{/switch}}
                        {{/if}}
 {{#if this.isArray~}}* @param {{this.label}}Len uint16_t{{/if}}
 {{/each}}
 */
#define emberAfFillCommandGlobal{{direction this.source}}{{this.label}}(clusterId, \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
            {{this.label}}, \
            {{this.label}}Len) \
            {{else}}
            {{this.label}}, \
            {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
            {{this.label}}) \
            {{else}}
            {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}
  emberAfFillExternal{{#if (commandManufactureSpecific this.manufacturerCode)}}ManufacturerSpecific{{/if}}Buffer((ZCL_GLOBAL_COMMAND \
    {{#if (commandManufactureSpecific this.manufacturerCode)}}| ZCL_MANUFACTURER_SPECIFIC_MASK{{/if}} | ZCL_FRAME_CONTROL_{{strong (direction this.source)}}), \
    clusterId, \
    {{~#if (commandManufactureSpecific this.manufacturerCode)}}0x{{this.manufacturerCode}},{{/if}}
    ZCL_{{strong this.label}}_COMMAND_ID, \
    "{{formatCharactersForCommandArguments this.CommandArguments}}", \
    {{#each this.CommandArguments}}
        {{#if this.isArray~}}
            {{#if @last}}
                {{this.label}}, \
                {{this.label}}Len);
            {{else}}
                {{this.label}}, \
                {{this.label}}Len, \
            {{/if}}
        {{else}}
            {{#if @last}}
                {{this.label}});
            {{else}}
                {{this.label}}, \
            {{/if}}
        {{/if}}
    {{/each}}
{{/if}}
 {{/each}}
 /** @} END Global Commands */