{{#each type}}
/** @name {{this.label}} cluster Callbacks */
// @{

/** @brief {{this.label}} cluster Client Attribute Changed
 *
 * Client Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute that changed  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientAttributeChangedCallback(uint8_t endpoint,
                                                       EmberAfAttributeId attributeId);

/** @brief {{this.label}} cluster Client Default Response
 *
 * This function is called when the client receives the default response from
 * the server.
 *
 * @param endpoint Destination endpoint  Ver.: always
 * @param commandId Command id  Ver.: always
 * @param status Status in default response  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientDefaultResponseCallback(uint8_t endpoint,
                                                      uint8_t commandId,
                                                      EmberAfStatus status);

/** @brief {{this.label}} cluster Client Init
 *
 * Client Init
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientInitCallback(uint8_t endpoint);

/** @brief {{this.label}} cluster Client Manufacturer Specific Attribute Changed
 *
 * Client Manufacturer Specific Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute that changed  Ver.: always
 * @param manufacturerCode Manufacturer Code of the attribute that changed 
 * Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientManufacturerSpecificAttributeChangedCallback(uint8_t endpoint,
                                                                           EmberAfAttributeId attributeId,
                                                                           uint16_t manufacturerCode);

/** @brief {{this.label}} cluster Client Message Sent
 *
 * Client Message Sent
 *
 * @param type The type of message sent  Ver.: always
 * @param indexOrDestination The destination or address to which the message was
 * sent  Ver.: always
 * @param apsFrame The APS frame for the message  Ver.: always
 * @param msgLen The length of the message  Ver.: always
 * @param message The message that was sent  Ver.: always
 * @param status The status of the sent message  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientMessageSentCallback(EmberOutgoingMessageType type,
                                                  uint16_t indexOrDestination,
                                                  EmberApsFrame *apsFrame,
                                                  uint16_t msgLen,
                                                  uint8_t *message,
                                                  EmberStatus status);

/** @brief {{this.label}} cluster Client Pre Attribute Changed
 *
 * Client Pre Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute to be changed  Ver.: always
 * @param attributeType Attribute type  Ver.: always
 * @param size Attribute size  Ver.: always
 * @param value Attribute value  Ver.: always
 */
EmberAfStatus emberAf{{camelCaseWithoutUnderscore this.define}}ClientPreAttributeChangedCallback(uint8_t endpoint,
                                                                   EmberAfAttributeId attributeId,
                                                                   EmberAfAttributeType attributeType,
                                                                   uint8_t size,
                                                                   uint8_t *value);

/** @brief {{this.label}} cluster Client Tick
 *
 * Client Tick
 *
 * @param endpoint Endpoint that is being served  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ClientTickCallback(uint8_t endpoint);

/** @brief {{this.label}} cluster Server Attribute Changed
 *
 * Server Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute that changed  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerAttributeChangedCallback(uint8_t endpoint,
                                                       EmberAfAttributeId attributeId);

/** @brief {{this.label}} cluster Server Default Response
 *
 * This function is called when the server receives the default response from
 * the client.
 *
 * @param endpoint Destination endpoint  Ver.: always
 * @param commandId Command id  Ver.: always
 * @param status Status in default response  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerDefaultResponseCallback(uint8_t endpoint,
                                                      uint8_t commandId,
                                                      EmberAfStatus status);

/** @brief {{this.label}} cluster Server Init
 *
 * Server Init
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerInitCallback(uint8_t endpoint);

/** @brief {{this.label}} cluster Server Manufacturer Specific Attribute Changed
 *
 * Server Manufacturer Specific Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute that changed  Ver.: always
 * @param manufacturerCode Manufacturer Code of the attribute that changed 
 * Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerManufacturerSpecificAttributeChangedCallback(uint8_t endpoint,
                                                                           EmberAfAttributeId attributeId,
                                                                           uint16_t manufacturerCode);

/** @brief {{this.label}} cluster Server Message Sent
 *
 * Server Message Sent
 *
 * @param type The type of message sent  Ver.: always
 * @param indexOrDestination The destination or address to which the message was
 * sent  Ver.: always
 * @param apsFrame The APS frame for the message  Ver.: always
 * @param msgLen The length of the message  Ver.: always
 * @param message The message that was sent  Ver.: always
 * @param status The status of the sent message  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerMessageSentCallback(EmberOutgoingMessageType type,
                                                  uint16_t indexOrDestination,
                                                  EmberApsFrame *apsFrame,
                                                  uint16_t msgLen,
                                                  uint8_t *message,
                                                  EmberStatus status);

/** @brief {{this.label}} cluster Server Pre Attribute Changed
 *
 * Server Pre Attribute Changed
 *
 * @param endpoint Endpoint that is being initialized  Ver.: always
 * @param attributeId Attribute to be changed  Ver.: always
 * @param attributeType Attribute type  Ver.: always
 * @param size Attribute size  Ver.: always
 * @param value Attribute value  Ver.: always
 */
EmberAfStatus emberAf{{camelCaseWithoutUnderscore this.define}}ServerPreAttributeChangedCallback(uint8_t endpoint,
                                                                   EmberAfAttributeId attributeId,
                                                                   EmberAfAttributeType attributeType,
                                                                   uint8_t size,
                                                                   uint8_t *value);

/** @brief {{this.label}} cluster Server Tick
 *
 * Server Tick
 *
 * @param endpoint Endpoint that is being served  Ver.: always
 */
void emberAf{{camelCaseWithoutUnderscore this.define}}ServerTickCallback(uint8_t endpoint);

{{#each this.COMMAND}}
/** @brief {{../label}} Cluster {{this.label}}
 *
 * {{this.label}}
 *
 */
void emberAf{{camelCaseWithoutUnderscore ../define}}{{this.label}}Callback(
    {{#each this.COMMAND_ARG}}
        {{#if @last}}
            {{#switch type}}
                {{#case 'attribute_id' ~}}uint16_t {{label}}{{/case ~}}           
                {{#case 'bitmap24' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'bitmap8' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'boolean' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'char_string' ~}}uint8_t* {{label}}{{/case ~}}
                {{#case 'cluster_id' ~}}uint16_t {{label}}{{/case ~}}
                {{#case 'data16' ~}}uint16_t {{label}}{{/case ~}}
                {{#case 'date' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'deviceinformationrecordsort' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'eventconfiguration' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'eventlogid' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'iaszonestatus' ~}}uint16_t {{label}}{{/case ~}}
                {{#case 'ieee_address' ~}}uint8_t* {{label}}{{/case ~}}
                {{#case 'int16s' ~}}int16_t {{label}}{{/case ~}}
                {{#case 'int16u' ~}}uint16_t {{label}}{{/case ~}}
                {{#case 'int24u' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'int32u' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'int48u' ~}}uint8_t* {{label}}{{/case ~}}
                {{#case 'int8s' ~}}int8_t {{label}}{{/case ~}}
                {{#case 'int8u' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'no_data' ~}}uint8_t* {{label}}{{/case ~}}
                {{#case 'octet_string' ~}}uint8_t* {{label}}{{/case ~}}
                {{#case 'pricetier' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'repaymentdebttype' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'snapshotcause' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'snapshotpayloadtype' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'snapshotscheduleconfirmation' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'status' ~}}uint8_t {{label}}{{/case ~}}
                {{#case 'utc_time' ~}}uint32_t {{label}}{{/case ~}}
                {{#case 'enum8' ~}}uint8_t {{label}}{{/case ~}}
                {{#default 'uint8_t' ~}}uint8_t {{label}}{{/default}}
            {{/switch}}
        {{else}}
            {{#switch type}}
                {{#case 'attribute_id' ~}}uint16_t {{label}},{{/case ~}}           
                {{#case 'bitmap24' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'bitmap8' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'boolean' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'char_string' ~}}uint8_t* {{label}},{{/case ~}}
                {{#case 'cluster_id' ~}}uint16_t {{label}},{{/case ~}}
                {{#case 'data16' ~}}uint16_t {{label}},{{/case ~}}
                {{#case 'date' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'deviceinformationrecordsort' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'eventconfiguration' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'eventlogid' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'iaszonestatus' ~}}uint16_t {{label}},{{/case ~}}
                {{#case 'ieee_address' ~}}uint8_t* {{label}},{{/case ~}}
                {{#case 'int16s' ~}}int16_t {{label}},{{/case ~}}
                {{#case 'int16u' ~}}uint16_t {{label}},{{/case ~}}
                {{#case 'int24u' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'int32u' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'int48u' ~}}uint8_t* {{label}},{{/case ~}}
                {{#case 'int8s' ~}}int8_t {{label}},{{/case ~}}
                {{#case 'int8u' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'no_data' ~}}uint8_t* {{label}},{{/case ~}}
                {{#case 'octet_string' ~}}uint8_t* {{label}},{{/case ~}}
                {{#case 'pricetier' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'repaymentdebttype' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'snapshotcause' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'snapshotpayloadtype' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'snapshotscheduleconfirmation' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'status' ~}}uint8_t {{label}},{{/case ~}}
                {{#case 'utc_time' ~}}uint32_t {{label}},{{/case ~}}
                {{#case 'enum8' ~}}uint8_t {{label}},{{/case ~}}
                {{#default 'uint8_t' ~}}uint8_t {{label}},{{/default}}
            {{/switch}}
        {{/if}}
    {{/each}});
{{/each}}

/** @} END {{this.label}} cluster Callbacks */


{{/each}}