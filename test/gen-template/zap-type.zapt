{{zap_header}}

#ifndef __ZAP_GEN_TYPE__

// ZCL attribute types
enum {
{{#zcl_atomics}}
{{ident}}ZCL_{{asMacro name}}_ATTRIBUTE_TYPE = {{asHex atomicId}}, // {{description}}
{{/zcl_atomics}}
};

// ZCL attribute sizes
#define ZAP_GENERATED_ATTRIBUTE_SIZES { \
{{#zcl_atomics}}
{{#if size}}
{{ident}}ZCL_{{asMacro name}}_ATTRIBUTE_TYPE, {{size}}, \
{{/if}}
{{/zcl_atomics}}
}

// ZCL enums

{{#zcl_enums}}

// Enum for {{label}}
typedef enum {
{{#zcl_enum_items}}
{{ident}}EMBER_ZCL_{{asDelimitedMacro parent.label}}_{{asDelimitedMacro label}} = {{value}},
{{/zcl_enum_items}}
} EmberAf{{asType label}};
{{/zcl_enums}}

// ZCL bitmaps

{{#zcl_bitmaps}}
{{#zcl_bitmap_items}}
#define EMBER_AF_{{asDelimitedMacro parent.label}}_{{asDelimitedMacro label}} ({{mask}})
{{/zcl_bitmap_items}}
{{/zcl_bitmaps}}

/* COMMENT ALL THIS OUT TEMPORARILY

// ZCL Structs

{{#zcl_structs}}

// Struct for {{label}}
typedef struct _{{asType label}} {
{{#zcl_struct_items}}
{{ident}}{{asType type}} {{asSymbol label}};
{{/zcl_struct_items}}
} {{asType label}};
{{/zcl_structs}}

*/

#endif